package com.oracle.tdc.kafka;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import com.oracle.tdc.msg.Customer;

import oracle.jdbc.pool.OracleDataSource;
import oracle.jdbc.OracleConnection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;


public class AtpConnection
{
	final static String DB_URL="jdbc:oracle:thin:@tdcdb_high";
	final static String DB_USER = "TDC";
	final static String DB_PASSWORD = "##SRcrise2020";


	private PreparedStatement statement;
	private boolean estadoOperacao;

	public Customer insert(Customer cus) throws SQLException, ClassNotFoundException {
		long id_gerado = 0;
		estadoOperacao = false;

		System.setProperty("oracle.net.tns_admin","C:\\oci\\Wallet_TDCDB");
		System.setProperty("oracle.jdbc.fanEnabled","false");

		Class.forName("oracle.jdbc.driver.OracleDriver");
		OracleDataSource ods = new OracleDataSource();
		ods.setURL(DB_URL);
		ods.setUser(DB_USER);
		ods.setPassword(DB_PASSWORD);

		// With AutoCloseable, the connection is closed automatically.
		try (OracleConnection connection = (OracleConnection)
				ods.getConnection()) {
			// Get the JDBC driver name and version
			DatabaseMetaData dbmd = connection.getMetaData();
			System.out.println("Driver Name: " + dbmd.getDriverName());
			System.out.println("Driver Version: " +
					dbmd.getDriverVersion());
			System.out.println("Database Username is: " +
					connection.getUserName());



			try {
				connection.setAutoCommit(false);
				String sql = "INSERT INTO CUSTOMER(NAME, AGE, CPF, STATUS, IDCUS) VALUES(?, ?, ?, ?, ?, )";

				statement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

				statement.setString(1, null);
				statement.setString(2, cus.getName());
				statement.setInt(3, cus.getAge());
				statement.setString(4, cus.getCpf());
				statement.setString(5, cus.getStatus());

				estadoOperacao =  statement.executeUpdate() > 0;
				if (estadoOperacao == false) {
					throw new SQLException("Falha na criação do usuário");
				}

				try (ResultSet generatedKeys = statement.getGeneratedKeys()) {
					if (generatedKeys.next()) {
						id_gerado = generatedKeys.getLong(1);
					}
					else {
						throw new SQLException("Falha na criação do usuário, nenhum ID obtido.");
					}
				}

				connection.commit();
				statement.close();
			} catch (SQLException e) {
				connection.rollback();
				e.printStackTrace();
			}finally{
				System.out.println("fechou");
				connection.close();
			}
		}

		return cus;
	}



}